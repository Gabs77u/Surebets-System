# üê≥ Docker Compose - Sistema de Surebets v3.0.0
# Configura√ß√£o para desenvolvimento e produ√ß√£o
# ‚úÖ Implementa√ß√µes de Seguran√ßa v3.0.0 Inclu√≠das

version: '3.8'

services:
  # üöÄ Aplica√ß√£o Principal
  surebets-app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: surebets-app
    restart: unless-stopped
    ports:
      - "5000:5000"  # Dashboard
      - "5001:5001"  # Admin API
    environment:
      # üîê Configura√ß√µes de Seguran√ßa JWT
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key-in-production}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-change-this-jwt-secret-in-production}
      - JWT_ACCESS_TOKEN_EXPIRES=${JWT_ACCESS_TOKEN_EXPIRES:-3600}
      - JWT_REFRESH_TOKEN_EXPIRES=${JWT_REFRESH_TOKEN_EXPIRES:-2592000}
      
      # üõ°Ô∏è Configura√ß√µes de Rate Limiting
      - RATELIMIT_STORAGE_URL=redis://redis:6379/1
      - RATELIMIT_DEFAULT=100 per hour
      - RATELIMIT_LOGIN_ATTEMPTS=5 per minute
      
      # üîí Configura√ß√µes de Valida√ß√£o
      - ENABLE_INPUT_VALIDATION=true
      - ENABLE_SQL_INJECTION_PROTECTION=true
      - ENABLE_XSS_PROTECTION=true
      - ENABLE_CSRF_PROTECTION=true
      
      # üìä Configura√ß√µes de Monitoramento
      - ENABLE_SECURITY_MONITORING=true
      - ENABLE_PERFORMANCE_MONITORING=true
      - SECURITY_LOG_LEVEL=INFO
      
      # üóÑÔ∏è Database e Cache
      - DATABASE_URL=postgresql://surebets:${DB_PASSWORD:-password}@db:5432/surebets
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config:/app/config
    depends_on:
      - db
      - redis
    networks:
      - surebets-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # üóÑÔ∏è Banco de Dados PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: surebets-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=surebets
      - POSTGRES_USER=surebets
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/populate.sql:/docker-entrypoint-initdb.d/02-populate.sql
    ports:
      - "5432:5432"
    networks:
      - surebets-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U surebets"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üîÑ Redis Cache
  redis:
    image: redis:7-alpine
    container_name: surebets-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - surebets-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # üìä Nginx Reverse Proxy (Produ√ß√£o)
  nginx:
    image: nginx:alpine
    container_name: surebets-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - surebets-app
    networks:
      - surebets-network
    profiles:
      - production

# üåê Redes
networks:
  surebets-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# üíæ Volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# üîß Configura√ß√µes de Produ√ß√£o
# Para usar em produ√ß√£o, execute:
# docker-compose --profile production up -d
